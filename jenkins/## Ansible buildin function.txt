## Ansible buildin function

Absolutely! In **Ansible 2.10+**, the “**`ansible.builtin`**” namespace contains all the **core modules** that ship with Ansible. These modules cover **file management, packages, services, users, commands, networking, cloud, databases, etc.**

Here’s a structured **list of commonly used `ansible.builtin` modules**:

---

## **1️⃣ File & Directory Management**

* `ansible.builtin.copy` – Copy files to remote hosts
* `ansible.builtin.template` – Copy files with Jinja2 template rendering
* `ansible.builtin.file` – Set permissions, ownership, symlinks, directories
* `ansible.builtin.fetch` – Fetch files from remote hosts
* `ansible.builtin.stat` – Retrieve file stats
* `ansible.builtin.replace` – Search & replace text in files
* `ansible.builtin.lineinfile` – Add/update/remove lines in files

---

## **2️⃣ Package Management**

* `ansible.builtin.yum` – Manage packages on RedHat/CentOS
* `ansible.builtin.apt` – Manage packages on Debian/Ubuntu
* `ansible.builtin.pip` – Manage Python packages
* `ansible.builtin.npm` – Manage Node.js packages
* `ansible.builtin.dnf` – Manage DNF packages (Fedora)
* `ansible.builtin.zypper` – Manage packages on SUSE

---

## **3️⃣ Service & Process Management**

* `ansible.builtin.service` – Start/stop/restart services
* `ansible.builtin.systemd` – Manage systemd units
* `ansible.builtin.command` – Run commands
* `ansible.builtin.shell` – Run shell commands
* `ansible.builtin.raw` – Run commands without module
* `ansible.builtin.process` – Get running processes info

---

## **4️⃣ User & Group Management**

* `ansible.builtin.user` – Manage users
* `ansible.builtin.group` – Manage groups
* `ansible.builtin.authorized_key` – Manage SSH keys

---

## **5️⃣ Networking & Connectivity**

* `ansible.builtin.uri` – Make HTTP requests
* `ansible.builtin.get_url` – Download files from HTTP/HTTPS
* `ansible.builtin.unarchive` – Extract archives
* `ansible.builtin.ping` – Check connectivity
* `ansible.builtin.wait_for` – Wait for port/file/state
* `ansible.builtin.wait_for_connection` – Wait for SSH connection

---

## **6️⃣ System & Info**

* `ansible.builtin.setup` – Gather facts about hosts
* `ansible.builtin.hostname` – Set system hostname
* `ansible.builtin.debug` – Print debug info
* `ansible.builtin.assert` – Assert conditions in playbook
* `ansible.builtin.fail` – Fail a task deliberately

---

## **7️⃣ Control & Workflow**

* `ansible.builtin.include_tasks` – Include task files dynamically
* `ansible.builtin.import_tasks` – Include tasks statically
* `ansible.builtin.include_role` – Include roles dynamically
* `ansible.builtin.import_role` – Include roles statically
* `ansible.builtin.set_fact` – Define variables at runtime
* `ansible.builtin.meta` – Metadata operations (refresh facts, dependencies)

---

## **8️⃣ Cloud & Infrastructure (Built-in Core Modules)**

* `ansible.builtin.ec2` – Manage AWS EC2 instances
* `ansible.builtin.ec2_tag` – Tag AWS resources
* `ansible.builtin.cloudformation` – AWS CloudFormation stacks
* `ansible.builtin.digital_ocean` – DigitalOcean droplets
* `ansible.builtin.openstack` – OpenStack resources

---

## **9️⃣ Compression & Archives**

* `ansible.builtin.archive` – Archive files
* `ansible.builtin.unarchive` – Extract files

---

## **10️⃣ Misc & Utilities**

* `ansible.builtin.wait_for` – Wait for a condition (port/file/state)
* `ansible.builtin.purge` – Remove packages
* `ansible.builtin.command` / `shell` – Execute commands
* `ansible.builtin.pause` – Pause playbook for a duration

---

### ⚡ **Tip:**

You can see a **full list of ansible.builtin modules** installed locally using:

```bash
ansible-doc -l
```

or for detailed info about a module:

```bash
ansible-doc ansible.builtin.copy
```

---

If you want, I can make a **complete categorized cheat sheet of all ansible.builtin modules** (100+ modules) in a **table format**, which is super handy for interviews and quick reference.

Do you want me to do that?
